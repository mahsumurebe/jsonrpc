"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const __1 = require("../../..");
class Output {
    static _errorToObj(e) {
        let out = {};
        if (e instanceof __1.ServerError) {
            out = e.toJSON();
            if (out.data && out.data instanceof Error) {
                out.data = Output._errorToObj(out.data);
            }
        }
        else if (e instanceof Error) {
            out = {
                code: e.name,
                message: e.message,
                stack: e.stack,
            };
        }
        return out;
    }
    static generate(data, req) {
        if (data.constructor.name === 'Object' && 'jsonrpc' in data && ('error' in data || 'result' in data) && 'id' in data) {
            return data;
        }
        if (data instanceof Error) {
            return {
                id: req.id || null,
                jsonrpc: req.jsonrpc || '2.0',
                error: Output._errorToObj(data),
                result: null
            };
        }
        else {
            return {
                id: req.id,
                jsonrpc: req.jsonrpc,
                result: data
            };
        }
    }
}
exports.Output = Output;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvU2VydmVyL0xpYnJhcnkvT3V0cHV0L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0NBQTJEO0FBRTNELE1BQWEsTUFBTTtJQUNmLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBYztRQUM3QixJQUFJLEdBQUcsR0FBMEIsRUFBRSxDQUFDO1FBRXBDLElBQUksQ0FBQyxZQUFZLGVBQVcsRUFBRTtZQUMxQixHQUFHLEdBQUcsQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDO1lBQ2pCLElBQUksR0FBRyxDQUFDLElBQUksSUFBSSxHQUFHLENBQUMsSUFBSSxZQUFZLEtBQUssRUFBRTtnQkFDdkMsR0FBRyxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUMzQztTQUNKO2FBQU0sSUFBSSxDQUFDLFlBQVksS0FBSyxFQUFFO1lBQzNCLEdBQUcsR0FBRztnQkFDRixJQUFJLEVBQUUsQ0FBQyxDQUFDLElBQUk7Z0JBQ1osT0FBTyxFQUFFLENBQUMsQ0FBQyxPQUFPO2dCQUNsQixLQUFLLEVBQUUsQ0FBQyxDQUFDLEtBQUs7YUFDakIsQ0FBQztTQUNMO1FBRUQsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDO0lBR0QsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFTLEVBQUUsR0FBc0I7UUFDN0MsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksS0FBSyxRQUFRLElBQUksU0FBUyxJQUFJLElBQUksSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLElBQUksUUFBUSxJQUFJLElBQUksQ0FBQyxJQUFJLElBQUksSUFBSSxJQUFJLEVBQUU7WUFDbEgsT0FBTyxJQUFJLENBQUM7U0FDZjtRQUNELElBQUksSUFBSSxZQUFZLEtBQUssRUFBRTtZQUN2QixPQUFPO2dCQUNILEVBQUUsRUFBRSxHQUFHLENBQUMsRUFBRSxJQUFJLElBQUk7Z0JBQ2xCLE9BQU8sRUFBRSxHQUFHLENBQUMsT0FBTyxJQUFJLEtBQUs7Z0JBQzdCLEtBQUssRUFBRSxNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBUTtnQkFDdEMsTUFBTSxFQUFFLElBQUk7YUFDZixDQUFDO1NBQ0w7YUFBTTtZQUNILE9BQU87Z0JBQ0gsRUFBRSxFQUFFLEdBQUcsQ0FBQyxFQUFFO2dCQUNWLE9BQU8sRUFBRSxHQUFHLENBQUMsT0FBTztnQkFDcEIsTUFBTSxFQUFFLElBQUk7YUFDZixDQUFDO1NBQ0w7SUFDTCxDQUFDO0NBQ0o7QUF4Q0Qsd0JBd0NDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtSUEMsIFNlcnZlckVycm9yLCBTZXJ2ZXJFcnJvckpzb259IGZyb20gXCIuLi8uLi8uLlwiO1xuXG5leHBvcnQgY2xhc3MgT3V0cHV0IHtcbiAgICBzdGF0aWMgX2Vycm9yVG9PYmooZTogRXJyb3IgfCBhbnkpIHtcbiAgICAgICAgbGV0IG91dDogU2VydmVyRXJyb3JKc29uIHwgYW55ID0ge307XG5cbiAgICAgICAgaWYgKGUgaW5zdGFuY2VvZiBTZXJ2ZXJFcnJvcikge1xuICAgICAgICAgICAgb3V0ID0gZS50b0pTT04oKTtcbiAgICAgICAgICAgIGlmIChvdXQuZGF0YSAmJiBvdXQuZGF0YSBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgICAgICAgICAgb3V0LmRhdGEgPSBPdXRwdXQuX2Vycm9yVG9PYmoob3V0LmRhdGEpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGUgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICAgICAgb3V0ID0ge1xuICAgICAgICAgICAgICAgIGNvZGU6IGUubmFtZSxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBlLm1lc3NhZ2UsXG4gICAgICAgICAgICAgICAgc3RhY2s6IGUuc3RhY2ssXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG91dDtcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2VuZXJhdGUoZGF0YTogRXJyb3IsIHJlcTogUlBDLlJlcXVlc3QuSURhdGEpXG4gICAgc3RhdGljIGdlbmVyYXRlKGRhdGE6IGFueSwgcmVxOiBSUEMuUmVxdWVzdC5JRGF0YSk6IFJQQy5SZXNwb25zZS5JRGF0YSB7XG4gICAgICAgIGlmIChkYXRhLmNvbnN0cnVjdG9yLm5hbWUgPT09ICdPYmplY3QnICYmICdqc29ucnBjJyBpbiBkYXRhICYmICgnZXJyb3InIGluIGRhdGEgfHwgJ3Jlc3VsdCcgaW4gZGF0YSkgJiYgJ2lkJyBpbiBkYXRhKSB7XG4gICAgICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZGF0YSBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGlkOiByZXEuaWQgfHwgbnVsbCxcbiAgICAgICAgICAgICAgICBqc29ucnBjOiByZXEuanNvbnJwYyB8fCAnMi4wJyxcbiAgICAgICAgICAgICAgICBlcnJvcjogT3V0cHV0Ll9lcnJvclRvT2JqKGRhdGEpIGFzIGFueSxcbiAgICAgICAgICAgICAgICByZXN1bHQ6IG51bGxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGlkOiByZXEuaWQsXG4gICAgICAgICAgICAgICAganNvbnJwYzogcmVxLmpzb25ycGMsXG4gICAgICAgICAgICAgICAgcmVzdWx0OiBkYXRhXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgfVxufVxuIl19