"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const MethodNotFound_1 = require("../../../Errors/MethodNotFound");
const InternalError_1 = require("../../../Errors/InternalError");
const ServerError_1 = require("../../../Errors/ServerError");
class Routes {
    constructor() {
        this._routes = {};
    }
    add(method, callback, params) {
        this._routes[method] = {
            callback: callback,
            params: params
        };
        return this;
    }
    has(method) {
        return !!this._routes[method];
    }
    list() {
        return this._routes;
    }
    async call(method, params, req, res) {
        if (!this._routes[method]) {
            throw new MethodNotFound_1.MethodNotFound();
        }
        try {
            return this._routes[method].callback.apply(this._routes[method], [params || {}, req, res]);
        }
        catch (e) {
            if (e instanceof ServerError_1.ServerError) {
                throw e;
            }
            else {
                throw new InternalError_1.InternalError(e);
            }
        }
    }
}
exports.Routes = Routes;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvU2VydmVyL0xpYnJhcnkvUm91dGVzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsbUVBQThEO0FBQzlELGlFQUE0RDtBQUM1RCw2REFBd0Q7QUFZeEQsTUFBYSxNQUFNO0lBQW5CO1FBQ0ksWUFBTyxHQUFlLEVBQUUsQ0FBQztJQWlDN0IsQ0FBQztJQS9CRyxHQUFHLENBQUMsTUFBYyxFQUFFLFFBQXVCLEVBQUUsTUFBOEI7UUFDdkUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsR0FBRztZQUNuQixRQUFRLEVBQUUsUUFBUTtZQUNsQixNQUFNLEVBQUUsTUFBTTtTQUNqQixDQUFDO1FBQ0YsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUVELEdBQUcsQ0FBQyxNQUFjO1FBQ2QsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRUQsSUFBSTtRQUNBLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN4QixDQUFDO0lBRUQsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFjLEVBQUUsTUFBVyxFQUFFLEdBQVksRUFBRSxHQUFhO1FBQy9ELElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFO1lBQ3ZCLE1BQU0sSUFBSSwrQkFBYyxFQUFFLENBQUM7U0FDOUI7UUFFRCxJQUFJO1lBQ0EsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLE1BQU0sSUFBSSxFQUFFLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFRLENBQUM7U0FDckc7UUFBQyxPQUFPLENBQUMsRUFBRTtZQUNSLElBQUksQ0FBQyxZQUFZLHlCQUFXLEVBQUU7Z0JBQzFCLE1BQU0sQ0FBQyxDQUFDO2FBQ1g7aUJBQU07Z0JBQ0gsTUFBTSxJQUFJLDZCQUFhLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDOUI7U0FDSjtJQUNMLENBQUM7Q0FDSjtBQWxDRCx3QkFrQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1JlcXVlc3QsIFJlc3BvbnNlfSBmcm9tIFwiZXhwcmVzc1wiO1xuaW1wb3J0IHtNZXRob2ROb3RGb3VuZH0gZnJvbSBcIi4uLy4uLy4uL0Vycm9ycy9NZXRob2ROb3RGb3VuZFwiO1xuaW1wb3J0IHtJbnRlcm5hbEVycm9yfSBmcm9tIFwiLi4vLi4vLi4vRXJyb3JzL0ludGVybmFsRXJyb3JcIjtcbmltcG9ydCB7U2VydmVyRXJyb3J9IGZyb20gXCIuLi8uLi8uLi9FcnJvcnMvU2VydmVyRXJyb3JcIjtcblxudHlwZSBSb3V0ZUNhbGxiYWNrID0gKGJvZHk/OiBhbnksIHJlcT86IFJlcXVlc3QsIHJlcz86IFJlc3BvbnNlKSA9PiBhbnk7XG50eXBlIFJvdXRlQ2FsbGJhY2tQYXJhbXMgPSB7XG4gICAgbmFtZTogc3RyaW5nLFxuICAgIHJlcXVpcmVkPzogYm9vbGVhbjtcbiAgICB0eXBlPzogc3RyaW5nO1xuICAgIHZhbGlkYXRlPzogKHZhbHVlOiBzdHJpbmcpID0+IGJvb2xlYW47XG59XG5cbnR5cGUgUm91dGVyTGlzdCA9IHsgW2tleTogc3RyaW5nXTogeyBjYWxsYmFjazogUm91dGVDYWxsYmFjaywgcGFyYW1zOiBSb3V0ZUNhbGxiYWNrUGFyYW1zW10gfSB9O1xuXG5leHBvcnQgY2xhc3MgUm91dGVzIHtcbiAgICBfcm91dGVzOiBSb3V0ZXJMaXN0ID0ge307XG5cbiAgICBhZGQobWV0aG9kOiBzdHJpbmcsIGNhbGxiYWNrOiBSb3V0ZUNhbGxiYWNrLCBwYXJhbXM/OiBSb3V0ZUNhbGxiYWNrUGFyYW1zW10pOiB0aGlzIHtcbiAgICAgICAgdGhpcy5fcm91dGVzW21ldGhvZF0gPSB7XG4gICAgICAgICAgICBjYWxsYmFjazogY2FsbGJhY2ssXG4gICAgICAgICAgICBwYXJhbXM6IHBhcmFtc1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICBoYXMobWV0aG9kOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuICEhdGhpcy5fcm91dGVzW21ldGhvZF07XG4gICAgfVxuXG4gICAgbGlzdCgpOiBSb3V0ZXJMaXN0IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3JvdXRlcztcbiAgICB9XG5cbiAgICBhc3luYyBjYWxsKG1ldGhvZDogc3RyaW5nLCBwYXJhbXM6IGFueSwgcmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKTogUHJvbWlzZTxhbnk+IHtcbiAgICAgICAgaWYgKCF0aGlzLl9yb3V0ZXNbbWV0aG9kXSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IE1ldGhvZE5vdEZvdW5kKCk7XG4gICAgICAgIH1cblxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3JvdXRlc1ttZXRob2RdLmNhbGxiYWNrLmFwcGx5KHRoaXMuX3JvdXRlc1ttZXRob2RdLCBbcGFyYW1zIHx8IHt9LCByZXEsIHJlc10pIGFzIGFueTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgaWYgKGUgaW5zdGFuY2VvZiBTZXJ2ZXJFcnJvcikge1xuICAgICAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBJbnRlcm5hbEVycm9yKGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuIl19